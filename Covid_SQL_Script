#view covid deaths

SELECT *
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
WHERE continent is not null
order by 3, 4

#view covid vaccinations

SELECT *
FROM `portfolioprojects-447322.Covid_data.CovidVaccinations` 
order by 3, 4

#selecting data to use

SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
WHERE continent is not null
order by 1, 2

#Looking at Total Cases vs Total Deaths
#shows likelihood of dying if you get covid in the US
##NULLIF used because cannot divide 0/0 in dates before cases were recorded
##using WHERE Location like %states% not working because didn't accept %, used exact match

SELECT Location, date, total_cases, total_deaths,(total_deaths/NULLIF(total_cases, 0))* 100 AS DeathPercentage
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
WHERE Location LIKE 'United States'
and continent is not null
order by 1, 2

#looking at Total Cases vs Population, US specific
#shows what percentage of the population got covid
##good one to make a view of

SELECT Location, date, population, total_cases, (total_cases/population) * 100 AS CasesPerPopPercentage
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
WHERE Location LIKE 'United States'
and continent is not null
order by 1, 2

#looking at countries with highest infection count compared to population

SELECT Location, population, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/population)) * 100 AS CasesPerPopPercentage
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
#WHERE Location LIKE 'United States'
WHERE continent is not null
Group by Location, population
order by CasesPerPopPercentage desc

#showing countries with Highest Death Count per Population
##looks messy, looking at the original table, have world and entire continents showing up, and where that is continent column is null, so added in beginning WHERE continent is not null 

SELECT Location, MAX(CAST (total_deaths as int)) as TotalDeathCount
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
#WHERE Location LIKE 'United States'
WHERE continent is not null
Group by location
order by TotalDeathCount desc

#Let's break things down by continent
#showing the continents with highest death count

SELECT continent, MAX(CAST (total_deaths as int)) as TotalDeathCount
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
#WHERE Location LIKE 'United States'
WHERE continent is not null
Group by continent
order by TotalDeathCount desc

#corrected break down by continent 
#showing the continents with highest death count
##includes additional breakdowns in newer data

SELECT Location, MAX(CAST (total_deaths as int)) as TotalDeathCount
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
#WHERE Location LIKE 'United States'
WHERE continent is null
Group by location
order by TotalDeathCount desc

#Global numbers

SELECT date, SUM(new_cases) as TotalCases, SUM(CAST(new_deaths as int)) as TotalDeaths, SUM(CAST(new_deaths as int))/NULLIF(SUM(new_cases), 0) * 100 AS GlobalDeathPercentage
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
#WHERE Location LIKE 'United States'
WHERE continent is not null
Group by date
order by 1, 2

#shows entire Global Death Percentage, Total Cases, and Total Deaths

SELECT SUM(new_cases) as TotalCases, SUM(CAST(new_deaths as int)) as TotalDeaths, SUM(CAST(new_deaths as int))/NULLIF(SUM(new_cases), 0) * 100 AS GlobalDeathPercentage
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
#WHERE Location LIKE 'United States'
WHERE continent is not null
#Group by date
order by 1, 2

#reviewing the vaccinations table

SELECT *
FROM `portfolioprojects-447322.Covid_data.CovidVaccinations` 
order by 3, 4

#Joining the Deaths and Vaccinations tables together

SELECT *
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` dea
JOIN `portfolioprojects-447322.Covid_data.CovidVaccinations` vac
  ON dea.location = vac.location 
  and dea.date = vac.date

#looking at Total Population vs Vaccinations

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` dea
JOIN `portfolioprojects-447322.Covid_data.CovidVaccinations` vac
  ON dea.location = vac.location 
  and dea.date = vac.date
WHERE dea.continent is not null
Order by 1, 2, 3

#looking at a rolling count of New Vaccinations over time per location

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as RollingVaccineCount, 
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` dea
JOIN `portfolioprojects-447322.Covid_data.CovidVaccinations` vac
  ON dea.location = vac.location 
  and dea.date = vac.date
WHERE dea.continent is not null
Order by 2, 3

#back to Total Population vs Vaccinations to look at how many people of the total population are vaccinated on a rolling basis
#using a CTE

With PopvsVac #(continent, location, date, population, new_vaccinations, RollingVaccineCount)
as
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as RollingVaccineCount, 
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` dea
JOIN `portfolioprojects-447322.Covid_data.CovidVaccinations` vac
  ON dea.location = vac.location 
  and dea.date = vac.date
WHERE dea.continent is not null
#Order by 2, 3
)
Select*, (RollingVaccineCount/population) * 100 as PopulationVaccinatedPercentage
From PopvsVac

#using a temp table
##this is not working, something is wrong, but shows same data as previous CTE

#Drop table if exists PercentPopulationVaccinated
Create Table PercentPopulationVaccinated
(
  continent nvarchar(255),
  location nvarchar(255),
  date datetime,
  population numeric,
  new_vaccinations numeric,
  RollingVaccineCount numeric
)

INSERT INTO PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as RollingVaccineCount, 
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` dea
JOIN `portfolioprojects-447322.Covid_data.CovidVaccinations` vac
  ON dea.location = vac.location 
  and dea.date = vac.date
WHERE dea.continent is not null
#Order by 2, 3

Select *, (RollingVaccineCount/population) * 100 as PopulationVaccinatedPercentage
From PercentPopulationVaccinated

#anyway...moving on to create a view to use later in visualizations
#View of Highest Continental Deaths

CREATE VIEW Covid_data.HighestContinentalDeaths as
SELECT continent, MAX(CAST (total_deaths as int)) as TotalDeathCount
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
#WHERE Location LIKE 'United States'
WHERE continent is not null
Group by continent
#order by TotalDeathCount desc

#View of Total Cases vs Total Deaths in U.S.

CREATE VIEW Covid_data.TotalCasesvsTotalDeathsinUS as
SELECT Location, date, total_cases, total_deaths,(total_deaths/NULLIF(total_cases, 0))* 100 AS DeathPercentage
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
WHERE Location LIKE 'United States'
and continent is not null
#order by 1, 2

#View of Total Cases vs Population in U.S.

CREATE VIEW Covid_data.TotalCasesvsPopulationinUS as
SELECT Location, date, population, total_cases, (total_cases/population) * 100 AS CasesPerPopPercentage
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
WHERE Location LIKE 'United States'
and continent is not null
order by 1, 2

#View of Countries with Highest Infection Count per Population

CREATE VIEW Covid_data.HighestInfectionCountperPopulation as
SELECT Location, population, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/population)) * 100 AS CasesPerPopPercentage
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
#WHERE Location LIKE 'United States'
WHERE continent is not null
Group by Location, population
order by CasesPerPopPercentage desc

#View of Countries with Highest Death Count per Population

CREATE VIEW Covid_data.HighestDeathCountperPopulation as
SELECT Location, MAX(CAST (total_deaths as int)) as TotalDeathCount
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
#WHERE Location LIKE 'United States'
WHERE continent is not null
Group by location
order by TotalDeathCount desc

#View of Continental Highest Death Count

Create View Covid_data.ContinentalHighestDeathCount as
SELECT continent, MAX(CAST (total_deaths as int)) as TotalDeathCount
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
#WHERE Location LIKE 'United States'
WHERE continent is not null
Group by continent
order by TotalDeathCount desc

#View of Corrected Continental Highest Death Count

CREATE VIEW Covid_data.CorrectContinentalHighestDeathCount as
SELECT Location, MAX(CAST (total_deaths as int)) as TotalDeathCount
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
#WHERE Location LIKE 'United States'
WHERE continent is null
Group by location
order by TotalDeathCount desc

#View of Global Numbers

Create View Covid_data.GlobalNumbers as
SELECT date, SUM(new_cases) as TotalCases, SUM(CAST(new_deaths as int)) as TotalDeaths, SUM(CAST(new_deaths as int))/NULLIF(SUM(new_cases), 0) * 100 AS GlobalDeathPercentage
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
#WHERE Location LIKE 'United States'
WHERE continent is not null
Group by date
order by 1, 2

#View of Global Summary

Create View Covid_data.GlobalSummary as
SELECT SUM(new_cases) as TotalCases, SUM(CAST(new_deaths as int)) as TotalDeaths, SUM(CAST(new_deaths as int))/NULLIF(SUM(new_cases), 0) * 100 AS GlobalDeathPercentage
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` 
#WHERE Location LIKE 'United States'
WHERE continent is not null
#Group by date
order by 1, 2

#View of Total Population vs Vaccinations

Create View Covid_data.TotalPopulationvsVaccinations as
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` dea
JOIN `portfolioprojects-447322.Covid_data.CovidVaccinations` vac
  ON dea.location = vac.location 
  and dea.date = vac.date
WHERE dea.continent is not null
Order by 1, 2, 3

#View of Rolling New Vaccinations per Location

Create View Covid_data.RollingNewVaccinationsperLocation as
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as RollingVaccineCount, 
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` dea
JOIN `portfolioprojects-447322.Covid_data.CovidVaccinations` vac
  ON dea.location = vac.location 
  and dea.date = vac.date
WHERE dea.continent is not null
Order by 2, 3

#View of Rolling Percentage of Population Vaccinated per Location

Create View Covid_data.RollingPercentageofPopulationVaccinatedperLocation as
With PopvsVac #(continent, location, date, population, new_vaccinations, RollingVaccineCount)
as
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as RollingVaccineCount, 
FROM `portfolioprojects-447322.Covid_data.CovidDeaths` dea
JOIN `portfolioprojects-447322.Covid_data.CovidVaccinations` vac
  ON dea.location = vac.location 
  and dea.date = vac.date
WHERE dea.continent is not null
#Order by 2, 3
)
Select*, (RollingVaccineCount/population) * 100 as PopulationVaccinatedPercentage
From PopvsVac





